{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport API from '../api';\nimport Swal from 'sweetalert2';\nimport StarRating from 'vue-star-rating';\nexport default {\n  components: {\n    StarRating\n  },\n  data() {\n    return {\n      post: {},\n      comments: [],\n      // comentarios existentes\n      newComment: {\n        author: '',\n        content: '',\n        rating: 0\n      }\n    };\n  },\n  async created() {\n    const response = await API.getPostByID(this.$route.params.id);\n    this.post = response;\n  },\n  methods: {\n    async removePost(id) {\n      const response = await API.delatePost(id);\n      this.$router.push({\n        name: 'home'\n      });\n      Swal.fire('', response.message, 'success');\n    },\n    addComment() {\n      // Agregar validación adicional si es necesario\n      this.comments.push({\n        id: this.comments.length + 1,\n        author: this.newComment.author,\n        content: this.newComment.content,\n        rating: this.newComment.rating\n      });\n\n      // Limpiar el formulario después de agregar el comentario\n      this.newComment.author = '';\n      this.newComment.content = '';\n      this.newComment.rating = 0;\n    }\n  }\n};","map":{"version":3,"names":["API","Swal","StarRating","components","data","post","comments","newComment","author","content","rating","created","response","getPostByID","$route","params","id","methods","removePost","delatePost","$router","push","name","fire","message","addComment","length"],"sources":["src/views/Post.vue"],"sourcesContent":["<template>\r\n    <v-container>\r\n      <v-row no-gutters>\r\n        <v-col sm=\"7\">\r\n          <!-- Lista de comentarios -->\r\n          <div v-for=\"comment in comments\" :key=\"comment.id\">\r\n            <h4>{{ comment.author }}</h4>\r\n            <p>{{ comment.content }}</p>\r\n            <star-rating :rating=\"comment.rating\" :star-size=\"20\"></star-rating>\r\n          </div>\r\n        </v-col>\r\n        <v-col sm=\"5\">\r\n          <!-- Formulario para agregar comentario -->\r\n          <div>\r\n            <h4>Agregar comentario</h4>\r\n            <v-form @submit=\"addComment\">\r\n              <v-text-field v-model=\"newComment.author\" label=\"Autor\"></v-text-field>\r\n              <v-textarea v-model=\"newComment.content\" label=\"Contenido\"></v-textarea>\r\n              <star-rating v-model=\"newComment.rating\" :star-size=\"20\"></star-rating>\r\n              <v-btn type=\"submit\" color=\"primary\">Agregar</v-btn>\r\n            </v-form>\r\n          </div>\r\n        </v-col>\r\n      </v-row>\r\n    </v-container>\r\n  </template>\r\n\r\n<script>\r\nimport API from '../api';\r\nimport Swal from 'sweetalert2';\r\nimport StarRating from 'vue-star-rating';\r\n\r\nexport default {\r\n    components: {\r\n        StarRating,\r\n    },\r\n    data() {\r\n        return {\r\n            post: {},\r\n            comments: [], // comentarios existentes\r\n            newComment: {\r\n                author: '',\r\n                content: '',\r\n                rating: 0\r\n            }\r\n        };\r\n    },\r\n    async created() {\r\n        const response = await API.getPostByID(this.$route.params.id);\r\n        this.post = response;\r\n    },\r\n    methods: {\r\n        async removePost(id) {\r\n            const response = await API.delatePost(id);\r\n            this.$router.push({ name: 'home' });\r\n            Swal.fire('', response.message, 'success');\r\n        },\r\n        addComment() {\r\n            // Agregar validación adicional si es necesario\r\n            this.comments.push({\r\n                id: this.comments.length + 1,\r\n                author: this.newComment.author,\r\n                content: this.newComment.content,\r\n                rating: this.newComment.rating\r\n            });\r\n\r\n            // Limpiar el formulario después de agregar el comentario\r\n            this.newComment.author = '';\r\n            this.newComment.content = '';\r\n            this.newComment.rating = 0;\r\n        }\r\n    }\r\n};\r\n</script>"],"mappings":";AA4BA,OAAAA,GAAA;AACA,OAAAC,IAAA;AACA,OAAAC,UAAA;AAEA;EACAC,UAAA;IACAD;EACA;EACAE,KAAA;IACA;MACAC,IAAA;MACAC,QAAA;MAAA;MACAC,UAAA;QACAC,MAAA;QACAC,OAAA;QACAC,MAAA;MACA;IACA;EACA;EACA,MAAAC,QAAA;IACA,MAAAC,QAAA,SAAAZ,GAAA,CAAAa,WAAA,MAAAC,MAAA,CAAAC,MAAA,CAAAC,EAAA;IACA,KAAAX,IAAA,GAAAO,QAAA;EACA;EACAK,OAAA;IACA,MAAAC,WAAAF,EAAA;MACA,MAAAJ,QAAA,SAAAZ,GAAA,CAAAmB,UAAA,CAAAH,EAAA;MACA,KAAAI,OAAA,CAAAC,IAAA;QAAAC,IAAA;MAAA;MACArB,IAAA,CAAAsB,IAAA,KAAAX,QAAA,CAAAY,OAAA;IACA;IACAC,WAAA;MACA;MACA,KAAAnB,QAAA,CAAAe,IAAA;QACAL,EAAA,OAAAV,QAAA,CAAAoB,MAAA;QACAlB,MAAA,OAAAD,UAAA,CAAAC,MAAA;QACAC,OAAA,OAAAF,UAAA,CAAAE,OAAA;QACAC,MAAA,OAAAH,UAAA,CAAAG;MACA;;MAEA;MACA,KAAAH,UAAA,CAAAC,MAAA;MACA,KAAAD,UAAA,CAAAE,OAAA;MACA,KAAAF,UAAA,CAAAG,MAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}