{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport API from '../api';\nimport Swal from 'sweetalert2';\nimport StarRating from 'vue-star-rating';\nexport default {\n  components: {\n    StarRating\n  },\n  data() {\n    return {\n      post: {},\n      comments: [],\n      newComment: {\n        author: '',\n        content: '',\n        rating: 0\n      }\n    };\n  },\n  async created() {\n    const response = await API.getPostByID(this.$route.params.id);\n    this.post = response;\n\n    // Obtener los comentarios almacenados en el navegador\n    const storedComments = localStorage.getItem('postComments');\n    if (storedComments) {\n      this.comments = JSON.parse(storedComments);\n    }\n  },\n  methods: {\n    async removePost(id) {\n      const response = await API.delatePost(id);\n      this.$router.push({\n        name: 'home'\n      });\n      Swal.fire('', response.message, 'success');\n    },\n    addComment() {\n      this.comments.push({\n        id: this.comments.length + 1,\n        author: this.newComment.author,\n        content: this.newComment.content,\n        rating: this.newComment.rating\n      });\n\n      // Limpiar el formulario después de agregar el comentario\n      this.newComment.author = '';\n      this.newComment.content = '';\n      this.newComment.rating = 0;\n\n      // Guardar los comentarios en el navegador\n      localStorage.setItem('postComments', JSON.stringify(this.comments));\n    }\n  }\n};","map":{"version":3,"names":["API","Swal","StarRating","components","data","post","comments","newComment","author","content","rating","created","response","getPostByID","$route","params","id","storedComments","localStorage","getItem","JSON","parse","methods","removePost","delatePost","$router","push","name","fire","message","addComment","length","setItem","stringify"],"sources":["src/views/Post.vue"],"sourcesContent":["<template>\r\n    <v-container>\r\n      <v-row no-gutters>\r\n        <v-col sm=\"10\" class=\"pa-4 mx-auto\">\r\n          <v-card class=\"pa-2\">\r\n            <v-img :src=\"`/${post.image}`\"></v-img>\r\n            <v-card-actions class=\"pb-0\">\r\n              <v-row class=\"mt-1 mx-1\">\r\n                <v-col sm=\"2\">\r\n                  <v-btn small outlined color=\"primary\">\r\n                    {{ post.categoria }}\r\n                  </v-btn>\r\n                </v-col>\r\n                <v-col sm=\"10\" class=\"d-flex justify-end\">\r\n                  <v-btn color=\"success\" text :to=\"{ name: 'edit-post' ,params: { id: post._id }}\">Editar</v-btn>\r\n                  <v-btn color=\"red\" text @click=\"removePost(post._id)\">Eliminar</v-btn>\r\n                </v-col>\r\n              </v-row>\r\n            </v-card-actions>\r\n            <v-card-subtitle class=\"headline\">\r\n              <h3>{{ post.titulo }}</h3>\r\n            </v-card-subtitle>\r\n            <v-card-text class=\"gray--text\">\r\n              <p>{{ post.contenido }}</p>\r\n              <p>{{ post.created }}</p>\r\n              <h3>Comentarios</h3>\r\n              <div v-if=\"comments.length === 0\">No hay comentarios.</div>\r\n              <ul v-else>\r\n                <li v-for=\"comment in comments\" :key=\"comment.id\">\r\n                  <strong>{{ comment.author }}</strong>: {{ comment.content }} - Rating: {{ comment.rating }}\r\n                </li>\r\n              </ul>\r\n            </v-card-text>\r\n          </v-card>\r\n        </v-col>\r\n        <v-col sm=\"2\" class=\"pa-4\">\r\n          <v-card class=\"pa-2\">\r\n            <h3>Agregar Comentario</h3>\r\n            <form @submit.prevent=\"addComment\">\r\n              <div>\r\n                <label for=\"author\">Nombre:</label>\r\n                <input type=\"text\" id=\"author\" v-model=\"newComment.author\" required>\r\n              </div>\r\n              <div>\r\n                <label for=\"content\">Comentario:</label>\r\n                <textarea id=\"content\" v-model=\"newComment.content\" required></textarea>\r\n              </div>\r\n              <div>\r\n                <label for=\"rating\">Puntuación:</label>\r\n                <star-rating v-model=\"newComment.rating\" :star-size=\"20\"></star-rating>\r\n              </div>\r\n              <button type=\"submit\">Agregar Comentario</button>\r\n            </form>\r\n          </v-card>\r\n        </v-col>\r\n      </v-row>\r\n    </v-container>\r\n  </template>\r\n\r\n<script>\r\nimport API from '../api';\r\nimport Swal from 'sweetalert2';\r\nimport StarRating from 'vue-star-rating';\r\n\r\nexport default {\r\n  components: {\r\n    StarRating,\r\n  },\r\n  data() {\r\n    return {\r\n      post: {},\r\n      comments: [],\r\n      newComment: {\r\n        author: '',\r\n        content: '',\r\n        rating: 0,\r\n      },\r\n    };\r\n  },\r\n  async created() {\r\n    const response = await API.getPostByID(this.$route.params.id);\r\n    this.post = response;\r\n\r\n    // Obtener los comentarios almacenados en el navegador\r\n    const storedComments = localStorage.getItem('postComments');\r\n    if (storedComments) {\r\n      this.comments = JSON.parse(storedComments);\r\n    }\r\n  },\r\n  methods: {\r\n    async removePost(id) {\r\n      const response = await API.delatePost(id);\r\n      this.$router.push({ name: 'home' });\r\n      Swal.fire('', response.message, 'success');\r\n    },\r\n    addComment() {\r\n      this.comments.push({\r\n        id: this.comments.length + 1,\r\n        author: this.newComment.author,\r\n        content: this.newComment.content,\r\n        rating: this.newComment.rating,\r\n      });\r\n\r\n      // Limpiar el formulario después de agregar el comentario\r\n      this.newComment.author = '';\r\n      this.newComment.content = '';\r\n      this.newComment.rating = 0;\r\n\r\n      // Guardar los comentarios en el navegador\r\n      localStorage.setItem('postComments', JSON.stringify(this.comments));\r\n    },\r\n  },\r\n};\r\n</script>"],"mappings":";AA4DA,OAAAA,GAAA;AACA,OAAAC,IAAA;AACA,OAAAC,UAAA;AAEA;EACAC,UAAA;IACAD;EACA;EACAE,KAAA;IACA;MACAC,IAAA;MACAC,QAAA;MACAC,UAAA;QACAC,MAAA;QACAC,OAAA;QACAC,MAAA;MACA;IACA;EACA;EACA,MAAAC,QAAA;IACA,MAAAC,QAAA,SAAAZ,GAAA,CAAAa,WAAA,MAAAC,MAAA,CAAAC,MAAA,CAAAC,EAAA;IACA,KAAAX,IAAA,GAAAO,QAAA;;IAEA;IACA,MAAAK,cAAA,GAAAC,YAAA,CAAAC,OAAA;IACA,IAAAF,cAAA;MACA,KAAAX,QAAA,GAAAc,IAAA,CAAAC,KAAA,CAAAJ,cAAA;IACA;EACA;EACAK,OAAA;IACA,MAAAC,WAAAP,EAAA;MACA,MAAAJ,QAAA,SAAAZ,GAAA,CAAAwB,UAAA,CAAAR,EAAA;MACA,KAAAS,OAAA,CAAAC,IAAA;QAAAC,IAAA;MAAA;MACA1B,IAAA,CAAA2B,IAAA,KAAAhB,QAAA,CAAAiB,OAAA;IACA;IACAC,WAAA;MACA,KAAAxB,QAAA,CAAAoB,IAAA;QACAV,EAAA,OAAAV,QAAA,CAAAyB,MAAA;QACAvB,MAAA,OAAAD,UAAA,CAAAC,MAAA;QACAC,OAAA,OAAAF,UAAA,CAAAE,OAAA;QACAC,MAAA,OAAAH,UAAA,CAAAG;MACA;;MAEA;MACA,KAAAH,UAAA,CAAAC,MAAA;MACA,KAAAD,UAAA,CAAAE,OAAA;MACA,KAAAF,UAAA,CAAAG,MAAA;;MAEA;MACAQ,YAAA,CAAAc,OAAA,iBAAAZ,IAAA,CAAAa,SAAA,MAAA3B,QAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}